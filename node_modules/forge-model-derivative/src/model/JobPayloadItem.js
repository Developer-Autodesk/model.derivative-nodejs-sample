/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/JobIgesOutputPayload', 'model/JobObjOutputPayload', 'model/JobObjOutputPayloadAdvanced', 'model/JobStepOutputPayload', 'model/JobStlOutputPayload', 'model/JobSvfOutputPayload', 'model/JobThumbnailOutputPayload'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./JobIgesOutputPayload'), require('./JobObjOutputPayload'), require('./JobObjOutputPayloadAdvanced'), require('./JobStepOutputPayload'), require('./JobStlOutputPayload'), require('./JobSvfOutputPayload'), require('./JobThumbnailOutputPayload'));
  } else {
    // Browser globals (root is window)
    if (!root.ForgeModelDerivative) {
      root.ForgeModelDerivative = {};
    }
    root.ForgeModelDerivative.JobPayloadItem = factory(root.ForgeModelDerivative.ApiClient, root.ForgeModelDerivative.JobIgesOutputPayload, root.ForgeModelDerivative.JobObjOutputPayload, root.ForgeModelDerivative.JobObjOutputPayloadAdvanced, root.ForgeModelDerivative.JobStepOutputPayload, root.ForgeModelDerivative.JobStlOutputPayload, root.ForgeModelDerivative.JobSvfOutputPayload, root.ForgeModelDerivative.JobThumbnailOutputPayload);
  }
}(this, function(ApiClient, JobIgesOutputPayload, JobObjOutputPayload, JobObjOutputPayloadAdvanced, JobStepOutputPayload, JobStlOutputPayload, JobSvfOutputPayload, JobThumbnailOutputPayload) {
  'use strict';




  /**
   * The JobPayloadItem model module.
   * @module model/JobPayloadItem
   */

  /**
   * Constructs a new <code>JobPayloadItem</code>.
   * Output description object, depends of the type
   * @alias module:model/JobPayloadItem
   * @class
   * @implements module:model/JobSvfOutputPayload
   * @implements module:model/JobThumbnailOutputPayload
   * @implements module:model/JobStlOutputPayload
   * @implements module:model/JobStepOutputPayload
   * @implements module:model/JobIgesOutputPayload
   * @implements module:model/JobObjOutputPayload
   * @param type {module:model/JobObjOutputPayload.TypeEnum} The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   */
  var exports = function(type) {
    var _this = this;

    JobSvfOutputPayload.call(_this, type);
    JobThumbnailOutputPayload.call(_this, type);
    JobStlOutputPayload.call(_this, type);
    JobStepOutputPayload.call(_this, type);
    JobIgesOutputPayload.call(_this, type);
    JobObjOutputPayload.call(_this, type);
  };

  /**
   * Constructs a <code>JobPayloadItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/JobPayloadItem} obj Optional instance to populate.
   * @return {module:model/JobPayloadItem} The populated <code>JobPayloadItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      JobSvfOutputPayload.constructFromObject(data, obj);
      JobThumbnailOutputPayload.constructFromObject(data, obj);
      JobStlOutputPayload.constructFromObject(data, obj);
      JobStepOutputPayload.constructFromObject(data, obj);
      JobIgesOutputPayload.constructFromObject(data, obj);
      JobObjOutputPayload.constructFromObject(data, obj);
    }
    return obj;
  }


  // Implement JobSvfOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobSvfOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {Array.<module:model/JobSvfOutputPayload.ViewsEnum>} views
   */
exports.prototype['views'] = undefined;

  // Implement JobThumbnailOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobThumbnailOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {module:model/JobThumbnailOutputPayloadAdvanced} advanced
   */
exports.prototype['advanced'] = undefined;

  // Implement JobStlOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobStlOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {module:model/JobStlOutputPayloadAdvanced} advanced
   */
exports.prototype['advanced'] = undefined;

  // Implement JobStepOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobStepOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {module:model/JobStepOutputPayloadAdvanced} advanced
   */
exports.prototype['advanced'] = undefined;

  // Implement JobIgesOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobIgesOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {module:model/JobIgesOutputPayloadAdvanced} advanced
   */
exports.prototype['advanced'] = undefined;

  // Implement JobObjOutputPayload interface:
  /**
   * The requested output types. Possible values include `svf`, `thumbnai`, `stl`, `step`, `iges`, or `obj`. For a list of supported types, call the [GET formats](https://developer.autodesk.com/en/docs/model-derivative/v2/reference/http/formats-GET) endpoint.
   * @member {module:model/JobObjOutputPayload.TypeEnum} type
   */
exports.prototype['type'] = undefined;

  /**
   * @member {module:model/JobObjOutputPayloadAdvanced} advanced
   */
exports.prototype['advanced'] = undefined;



  return exports;
}));


