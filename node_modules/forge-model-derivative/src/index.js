/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2016 
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Diagnostics', 'model/Formats', 'model/FormatsFormats', 'model/InputStream', 'model/Job', 'model/JobAcceptedJobs', 'model/JobIgesOutputPayload', 'model/JobIgesOutputPayloadAdvanced', 'model/JobObjOutputPayload', 'model/JobObjOutputPayloadAdvanced', 'model/JobPayload', 'model/JobPayloadInput', 'model/JobPayloadItem', 'model/JobPayloadOutput', 'model/JobStepOutputPayload', 'model/JobStepOutputPayloadAdvanced', 'model/JobStlOutputPayload', 'model/JobStlOutputPayloadAdvanced', 'model/JobSvfOutputPayload', 'model/JobThumbnailOutputPayload', 'model/JobThumbnailOutputPayloadAdvanced', 'model/Manifest', 'model/ManifestChildren', 'model/ManifestDerivative', 'model/Message', 'model/Messages', 'model/Metadata', 'model/MetadataCollection', 'model/MetadataData', 'model/MetadataMetadata', 'model/MetadataObject', 'model/Result', 'api/DerivativesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Diagnostics'), require('./model/Formats'), require('./model/FormatsFormats'), require('./model/InputStream'), require('./model/Job'), require('./model/JobAcceptedJobs'), require('./model/JobIgesOutputPayload'), require('./model/JobIgesOutputPayloadAdvanced'), require('./model/JobObjOutputPayload'), require('./model/JobObjOutputPayloadAdvanced'), require('./model/JobPayload'), require('./model/JobPayloadInput'), require('./model/JobPayloadItem'), require('./model/JobPayloadOutput'), require('./model/JobStepOutputPayload'), require('./model/JobStepOutputPayloadAdvanced'), require('./model/JobStlOutputPayload'), require('./model/JobStlOutputPayloadAdvanced'), require('./model/JobSvfOutputPayload'), require('./model/JobThumbnailOutputPayload'), require('./model/JobThumbnailOutputPayloadAdvanced'), require('./model/Manifest'), require('./model/ManifestChildren'), require('./model/ManifestDerivative'), require('./model/Message'), require('./model/Messages'), require('./model/Metadata'), require('./model/MetadataCollection'), require('./model/MetadataData'), require('./model/MetadataMetadata'), require('./model/MetadataObject'), require('./model/Result'), require('./api/DerivativesApi'));
  }
}(function(ApiClient, Diagnostics, Formats, FormatsFormats, InputStream, Job, JobAcceptedJobs, JobIgesOutputPayload, JobIgesOutputPayloadAdvanced, JobObjOutputPayload, JobObjOutputPayloadAdvanced, JobPayload, JobPayloadInput, JobPayloadItem, JobPayloadOutput, JobStepOutputPayload, JobStepOutputPayloadAdvanced, JobStlOutputPayload, JobStlOutputPayloadAdvanced, JobSvfOutputPayload, JobThumbnailOutputPayload, JobThumbnailOutputPayloadAdvanced, Manifest, ManifestChildren, ManifestDerivative, Message, Messages, Metadata, MetadataCollection, MetadataData, MetadataMetadata, MetadataObject, Result, DerivativesApi) {
  'use strict';

  /**
   * Asynchronous Javascript/Node.js library for the Autodesk Forge Model Derivative API..<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var ForgeModelDerivative = require('index'); // See note below*.
   * var xxxSvc = new ForgeModelDerivative.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new ForgeModelDerivative.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new ForgeModelDerivative.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new ForgeModelDerivative.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Diagnostics model constructor.
     * @property {module:model/Diagnostics}
     */
    Diagnostics: Diagnostics,
    /**
     * The Formats model constructor.
     * @property {module:model/Formats}
     */
    Formats: Formats,
    /**
     * The FormatsFormats model constructor.
     * @property {module:model/FormatsFormats}
     */
    FormatsFormats: FormatsFormats,
    /**
     * The InputStream model constructor.
     * @property {module:model/InputStream}
     */
    InputStream: InputStream,
    /**
     * The Job model constructor.
     * @property {module:model/Job}
     */
    Job: Job,
    /**
     * The JobAcceptedJobs model constructor.
     * @property {module:model/JobAcceptedJobs}
     */
    JobAcceptedJobs: JobAcceptedJobs,
    /**
     * The JobIgesOutputPayload model constructor.
     * @property {module:model/JobIgesOutputPayload}
     */
    JobIgesOutputPayload: JobIgesOutputPayload,
    /**
     * The JobIgesOutputPayloadAdvanced model constructor.
     * @property {module:model/JobIgesOutputPayloadAdvanced}
     */
    JobIgesOutputPayloadAdvanced: JobIgesOutputPayloadAdvanced,
    /**
     * The JobObjOutputPayload model constructor.
     * @property {module:model/JobObjOutputPayload}
     */
    JobObjOutputPayload: JobObjOutputPayload,
    /**
     * The JobObjOutputPayloadAdvanced model constructor.
     * @property {module:model/JobObjOutputPayloadAdvanced}
     */
    JobObjOutputPayloadAdvanced: JobObjOutputPayloadAdvanced,
    /**
     * The JobPayload model constructor.
     * @property {module:model/JobPayload}
     */
    JobPayload: JobPayload,
    /**
     * The JobPayloadInput model constructor.
     * @property {module:model/JobPayloadInput}
     */
    JobPayloadInput: JobPayloadInput,
    /**
     * The JobPayloadItem model constructor.
     * @property {module:model/JobPayloadItem}
     */
    JobPayloadItem: JobPayloadItem,
    /**
     * The JobPayloadOutput model constructor.
     * @property {module:model/JobPayloadOutput}
     */
    JobPayloadOutput: JobPayloadOutput,
    /**
     * The JobStepOutputPayload model constructor.
     * @property {module:model/JobStepOutputPayload}
     */
    JobStepOutputPayload: JobStepOutputPayload,
    /**
     * The JobStepOutputPayloadAdvanced model constructor.
     * @property {module:model/JobStepOutputPayloadAdvanced}
     */
    JobStepOutputPayloadAdvanced: JobStepOutputPayloadAdvanced,
    /**
     * The JobStlOutputPayload model constructor.
     * @property {module:model/JobStlOutputPayload}
     */
    JobStlOutputPayload: JobStlOutputPayload,
    /**
     * The JobStlOutputPayloadAdvanced model constructor.
     * @property {module:model/JobStlOutputPayloadAdvanced}
     */
    JobStlOutputPayloadAdvanced: JobStlOutputPayloadAdvanced,
    /**
     * The JobSvfOutputPayload model constructor.
     * @property {module:model/JobSvfOutputPayload}
     */
    JobSvfOutputPayload: JobSvfOutputPayload,
    /**
     * The JobThumbnailOutputPayload model constructor.
     * @property {module:model/JobThumbnailOutputPayload}
     */
    JobThumbnailOutputPayload: JobThumbnailOutputPayload,
    /**
     * The JobThumbnailOutputPayloadAdvanced model constructor.
     * @property {module:model/JobThumbnailOutputPayloadAdvanced}
     */
    JobThumbnailOutputPayloadAdvanced: JobThumbnailOutputPayloadAdvanced,
    /**
     * The Manifest model constructor.
     * @property {module:model/Manifest}
     */
    Manifest: Manifest,
    /**
     * The ManifestChildren model constructor.
     * @property {module:model/ManifestChildren}
     */
    ManifestChildren: ManifestChildren,
    /**
     * The ManifestDerivative model constructor.
     * @property {module:model/ManifestDerivative}
     */
    ManifestDerivative: ManifestDerivative,
    /**
     * The Message model constructor.
     * @property {module:model/Message}
     */
    Message: Message,
    /**
     * The Messages model constructor.
     * @property {module:model/Messages}
     */
    Messages: Messages,
    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata: Metadata,
    /**
     * The MetadataCollection model constructor.
     * @property {module:model/MetadataCollection}
     */
    MetadataCollection: MetadataCollection,
    /**
     * The MetadataData model constructor.
     * @property {module:model/MetadataData}
     */
    MetadataData: MetadataData,
    /**
     * The MetadataMetadata model constructor.
     * @property {module:model/MetadataMetadata}
     */
    MetadataMetadata: MetadataMetadata,
    /**
     * The MetadataObject model constructor.
     * @property {module:model/MetadataObject}
     */
    MetadataObject: MetadataObject,
    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result: Result,
    /**
     * The DerivativesApi service constructor.
     * @property {module:api/DerivativesApi}
     */
    DerivativesApi: DerivativesApi
  };

  return exports;
}));
